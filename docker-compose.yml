services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: seira_postgres
    environment:
      POSTGRES_DB: seira_db
      POSTGRES_USER: seira_user
      POSTGRES_PASSWORD: seira_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5435:5432"  # ✅ CAMBIAR A 5435 (puerto libre)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U seira_user -d seira_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - seira_network

  # Redis Cache & Broker
  redis:
    image: redis:7-alpine
    container_name: seira_redis
    command: redis-server --appendonly yes --requirepass seira_redis_2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - seira_network

  # Backend Flask API
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: seira_backend
    env_file:
      - .env  # ✅ AÑADIR: Carga variables desde .env
    environment:
      # ✅ Estas sobrescriben .env para conexión interna Docker
      - DATABASE_URL=postgresql://seira_user:seira_password_2024@postgres:5432/seira_db
      - REDIS_URL=redis://:seira_redis_2024@redis:6379/0
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python backend/app.py
    networks:
      - seira_network

volumes:
  postgres_data:
  redis_data:

networks:
  seira_network:
    driver: bridge